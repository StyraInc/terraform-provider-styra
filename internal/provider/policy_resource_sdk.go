// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"encoding/json"
	"github.com/StyraInc/terraform-provider-styra/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *PolicyResourceModel) ToSharedPoliciesV1PoliciesPutRequest() *shared.PoliciesV1PoliciesPutRequest {
	modules := make(map[string]string)
	for modulesKey, modulesValue := range r.Modules {
		var modulesInst string
		modulesInst = modulesValue.ValueString()

		modules[modulesKey] = modulesInst
	}
	var signature *shared.CryptoSignature
	if r.Signature != nil {
		var excluded interface{}
		if !r.Signature.Excluded.IsUnknown() && !r.Signature.Excluded.IsNull() {
			_ = json.Unmarshal([]byte(r.Signature.Excluded.ValueString()), &excluded)
		}
		var signatures interface{}
		if !r.Signature.Signatures.IsUnknown() && !r.Signature.Signatures.IsNull() {
			_ = json.Unmarshal([]byte(r.Signature.Signatures.ValueString()), &signatures)
		}
		signature = &shared.CryptoSignature{
			Excluded:   excluded,
			Signatures: signatures,
		}
	}
	out := shared.PoliciesV1PoliciesPutRequest{
		Modules:   modules,
		Signature: signature,
	}
	return &out
}

func (r *PolicyResourceModel) RefreshFromSharedPoliciesV1PolicyPutResponse(resp *shared.PoliciesV1PolicyPutResponse) {
	if resp != nil {
		r.RequestID = types.StringPointerValue(resp.RequestID)
	}
}

func (r *PolicyResourceModel) RefreshFromSharedPoliciesV1PolicyGetResponse(resp *shared.PoliciesV1PolicyGetResponse) {
	if resp != nil {
		r.RequestID = types.StringPointerValue(resp.RequestID)
		resultResult, _ := json.Marshal(resp.Result)
		r.Result = types.StringValue(string(resultResult))
	}
}
