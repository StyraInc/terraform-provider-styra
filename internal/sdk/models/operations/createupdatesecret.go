// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/Styra/terraform-provider-styra/internal/sdk/models/shared"
	"net/http"
)

type CreateUpdateSecretRequest struct {
	// secret ID
	SecretID string `pathParam:"style=simple,explode=false,name=secretId"`
	// if set to '*' then the request fill fail if the secret already exists
	IfNoneMatch                *string                           `header:"style=simple,explode=false,name=If-None-Match"`
	SecretsV1SecretsPutRequest shared.SecretsV1SecretsPutRequest `request:"mediaType=application/json"`
}

func (o *CreateUpdateSecretRequest) GetSecretID() string {
	if o == nil {
		return ""
	}
	return o.SecretID
}

func (o *CreateUpdateSecretRequest) GetIfNoneMatch() *string {
	if o == nil {
		return nil
	}
	return o.IfNoneMatch
}

func (o *CreateUpdateSecretRequest) GetSecretsV1SecretsPutRequest() shared.SecretsV1SecretsPutRequest {
	if o == nil {
		return shared.SecretsV1SecretsPutRequest{}
	}
	return o.SecretsV1SecretsPutRequest
}

type CreateUpdateSecretResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	SecretsV1SecretsPutResponse *shared.SecretsV1SecretsPutResponse
}

func (o *CreateUpdateSecretResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateUpdateSecretResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateUpdateSecretResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateUpdateSecretResponse) GetSecretsV1SecretsPutResponse() *shared.SecretsV1SecretsPutResponse {
	if o == nil {
		return nil
	}
	return o.SecretsV1SecretsPutResponse
}
