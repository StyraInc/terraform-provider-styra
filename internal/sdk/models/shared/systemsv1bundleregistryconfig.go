// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type SystemsV1BundleRegistryConfig struct {
	// when checked, bundles will be activated regardless of their compatibility with currently running agents
	DisableBundleCompatibilityCheck *bool                                `json:"disable_bundle_compatibility_check,omitempty"`
	DistributionS3                  *SystemsV1BundleDistributionS3Config `json:"distribution_s3,omitempty"`
	// extra bundle entry points to use when compiling bundles
	Entrypoints []string `json:"entrypoints,omitempty"`
	// manual deployment mode to prevent automatic deployment of new bundles
	ManualDeployment *bool `json:"manual_deployment,omitempty"`
	// Override of manual deployment mode flag per bundle type
	ManualDeploymentOverrides map[string]bool `json:"manual_deployment_overrides,omitempty"`
	// maximum number of all bundles to store
	MaxBundles *int64 `json:"max_bundles,omitempty"`
	// maximum number of previously deployed bundles to store
	MaxDeployedBundles *int64 `json:"max_deployed_bundles,omitempty"`
	// OPA optimization level to use when building bundles
	OptimizationLevel *int `json:"optimization_level,omitempty"`
}

func (o *SystemsV1BundleRegistryConfig) GetDisableBundleCompatibilityCheck() *bool {
	if o == nil {
		return nil
	}
	return o.DisableBundleCompatibilityCheck
}

func (o *SystemsV1BundleRegistryConfig) GetDistributionS3() *SystemsV1BundleDistributionS3Config {
	if o == nil {
		return nil
	}
	return o.DistributionS3
}

func (o *SystemsV1BundleRegistryConfig) GetEntrypoints() []string {
	if o == nil {
		return nil
	}
	return o.Entrypoints
}

func (o *SystemsV1BundleRegistryConfig) GetManualDeployment() *bool {
	if o == nil {
		return nil
	}
	return o.ManualDeployment
}

func (o *SystemsV1BundleRegistryConfig) GetManualDeploymentOverrides() map[string]bool {
	if o == nil {
		return nil
	}
	return o.ManualDeploymentOverrides
}

func (o *SystemsV1BundleRegistryConfig) GetMaxBundles() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxBundles
}

func (o *SystemsV1BundleRegistryConfig) GetMaxDeployedBundles() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxDeployedBundles
}

func (o *SystemsV1BundleRegistryConfig) GetOptimizationLevel() *int {
	if o == nil {
		return nil
	}
	return o.OptimizationLevel
}
