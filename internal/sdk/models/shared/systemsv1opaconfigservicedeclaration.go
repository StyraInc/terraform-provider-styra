// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type SystemsV1OpaConfigServiceDeclaration struct {
	// allow insecure TLS
	AllowInsecureTLS *bool                                            `json:"allow_insecure_tls,omitempty"`
	Credentials      *SystemsV1OpaConfigServiceDeclarationCredentials `json:"credentials,omitempty"`
	// HTTP headers to include in the requests to the service
	Headers map[string]string `json:"headers,omitempty"`
	// keys is a dictionary mapping the key name to the actual key and optionally the algorithm and scope.
	Keys map[string]KeysConfig `json:"keys,omitempty"`
	// unique name for each service, referred to by plugins
	Name string `json:"name"`
	// amount of time to wait for a server's response headers after fully writing the request
	ResponseHeaderTimeoutSeconds *int64                    `json:"response_header_timeout_seconds,omitempty"`
	TLS                          *SystemsV1ServerTLSConfig `json:"tls,omitempty"`
	// optional parameter that allows to use an “OCI” service type
	Type *string `json:"type,omitempty"`
	// base URL to contact the service with
	URL string `json:"url"`
}

func (o *SystemsV1OpaConfigServiceDeclaration) GetAllowInsecureTLS() *bool {
	if o == nil {
		return nil
	}
	return o.AllowInsecureTLS
}

func (o *SystemsV1OpaConfigServiceDeclaration) GetCredentials() *SystemsV1OpaConfigServiceDeclarationCredentials {
	if o == nil {
		return nil
	}
	return o.Credentials
}

func (o *SystemsV1OpaConfigServiceDeclaration) GetHeaders() map[string]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *SystemsV1OpaConfigServiceDeclaration) GetKeys() map[string]KeysConfig {
	if o == nil {
		return nil
	}
	return o.Keys
}

func (o *SystemsV1OpaConfigServiceDeclaration) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *SystemsV1OpaConfigServiceDeclaration) GetResponseHeaderTimeoutSeconds() *int64 {
	if o == nil {
		return nil
	}
	return o.ResponseHeaderTimeoutSeconds
}

func (o *SystemsV1OpaConfigServiceDeclaration) GetTLS() *SystemsV1ServerTLSConfig {
	if o == nil {
		return nil
	}
	return o.TLS
}

func (o *SystemsV1OpaConfigServiceDeclaration) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *SystemsV1OpaConfigServiceDeclaration) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}
