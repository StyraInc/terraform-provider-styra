// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/Styra/terraform-provider-styra/internal/sdk/internal/utils"
	"time"
)

type TokensV1Token struct {
	AllowPathPatterns []string         `json:"allow_path_patterns"`
	Description       string           `json:"description"`
	Expires           *time.Time       `json:"expires,omitempty"`
	ID                string           `json:"id"`
	Metadata          MetaV1ObjectMeta `json:"metadata"`
	Token             *string          `json:"token,omitempty"`
	TTL               string           `json:"ttl"`
	Uses              *int64           `json:"uses,omitempty"`
}

func (t TokensV1Token) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TokensV1Token) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TokensV1Token) GetAllowPathPatterns() []string {
	if o == nil {
		return []string{}
	}
	return o.AllowPathPatterns
}

func (o *TokensV1Token) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *TokensV1Token) GetExpires() *time.Time {
	if o == nil {
		return nil
	}
	return o.Expires
}

func (o *TokensV1Token) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *TokensV1Token) GetMetadata() MetaV1ObjectMeta {
	if o == nil {
		return MetaV1ObjectMeta{}
	}
	return o.Metadata
}

func (o *TokensV1Token) GetToken() *string {
	if o == nil {
		return nil
	}
	return o.Token
}

func (o *TokensV1Token) GetTTL() string {
	if o == nil {
		return ""
	}
	return o.TTL
}

func (o *TokensV1Token) GetUses() *int64 {
	if o == nil {
		return nil
	}
	return o.Uses
}
