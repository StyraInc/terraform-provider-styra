// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type SystemsV1PollingConfig struct {
	// maximum amount of time the server should wait before issuing a timeout if thereâ€™s no update available
	LongPollingTimeoutSeconds *int64 `json:"long_polling_timeout_seconds,omitempty"`
	// maximum amount of time to wait between bundle downloads
	MaxDelaySeconds *int64 `json:"max_delay_seconds,omitempty"`
	// minimum amount of time to wait between bundle downloads
	MinDelaySeconds *int64 `json:"min_delay_seconds,omitempty"`
}

func (o *SystemsV1PollingConfig) GetLongPollingTimeoutSeconds() *int64 {
	if o == nil {
		return nil
	}
	return o.LongPollingTimeoutSeconds
}

func (o *SystemsV1PollingConfig) GetMaxDelaySeconds() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxDelaySeconds
}

func (o *SystemsV1PollingConfig) GetMinDelaySeconds() *int64 {
	if o == nil {
		return nil
	}
	return o.MinDelaySeconds
}
